
#include <stdio.h> 
#include<sys/ipc.h>
#include <sys/msg.h>
:sender
#define MAX 10
struct mesg_buffer {
    long mesg_type;
    char mesg_text[100]; } message;
int main() {
    key_t key;
    int msgid;
    key = ftok("reciever", 65); // ftok to generate unique key
    msgid = msgget(key, 0666 | IPC_CREAT);  // create message queue
    message.mesg_type = 1;
    printf("Write Data : ");
    fgets(message.mesg_text,MAX,stdin);
    msgsnd(msgid, &message, sizeof(message), 0); // send message
    printf("Data send is : %s \n", message.mesg_text);
     msgrcv(msgid, &message, sizeof(message), 1, 0); // Recieve message
    printf("Data Received is : %s \n", message.mesg_text); // Display the message
    msgctl(msgid, IPC_RMID, NULL);  // Destroy the message
    return 0; 
    
}

:reciever
#include <stdio.h>  
#include<sys/ipc.h> 
#include <sys/msg.h>
#define MAX 10
struct mesg_buffer {
    long mesg_type;
    char mesg_text[100]; } message;
int main() 
{
    key_t key;
    int msgid;
    key = ftok("progfile", 65); // ftok to generate unique key
    msgid = msgget(key, 0666 | IPC_CREAT);  // create message queue
    msgrcv(msgid, &message, sizeof(message), 1, 0); // Recieve message
    printf("Data Received is : %s \n", message.mesg_text); // Display the message
    msgctl(msgid, IPC_RMID, NULL);  // Destroy the message
    return 0; 
}




