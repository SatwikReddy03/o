#include <stdio.h>

int main() {
    int i, j, n, m;
    int process_size[20], block_size[20], allocation[20];
    int largest_block_index;
    
    printf("Enter the number of processes: ");
    scanf("%d", &n);
    
    printf("Enter the size of each process:\n");
    for(i = 0; i < n; i++) {
        printf("Process %d: ", i+1);
        scanf("%d", &process_size[i]);
    }
    
    printf("Enter the number of memory blocks: ");
    scanf("%d", &m);
    
    printf("Enter the size of each memory block:\n");
    for(i = 0; i < m; i++) {
        printf("Block %d: ", i+1);
        scanf("%d", &block_size[i]);
        allocation[i] = -1;
    }
    
    // Allocate memory to each process
    for(i = 0; i < n; i++) {
        largest_block_index = -1;
        for(j = 0; j < m; j++) {
            if(block_size[j] >= process_size[i]) {
                if(largest_block_index == -1) {
                    largest_block_index = j;
                }
                else if(block_size[j] > block_size[largest_block_index]) {
                    largest_block_index = j;
                }
            }
        }
        if(largest_block_index != -1) {
            allocation[i] = largest_block_index;
            block_size[largest_block_index] -= process_size[i];
        }
    }
    
    // Output results
    printf("\nProcess\tProcess Size\tBlock\tBlock Size\n");
    for(i = 0; i < n; i++) {
        printf("%d\t\t%d\t\t", i+1, process_size[i]);
        if(allocation[i] != -1) {
            printf("%d\t%d\n", allocation[i]+1, block_size[allocation[i]]);
        }
        else {
            printf("Not Allocated\n");
        }
    }
    
    return 0;
}

